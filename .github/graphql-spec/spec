type Query {
  node(id: ID!): Node
  exampleApiResources(
    "Returns the first n elements from the list."
    first: Int

    "Returns the last n elements from the list."
    last: Int

    "Returns the elements in the list that come before the specified cursor."
    before: String

    "Returns the elements in the list that come after the specified cursor."
    after: String
  ): ExampleApiResourceCursorConnection
  exampleApiResource(id: ID!): ExampleApiResource
  healthChecks(
    "Returns the first n elements from the list."
    first: Int

    "Returns the last n elements from the list."
    last: Int

    "Returns the elements in the list that come before the specified cursor."
    before: String

    "Returns the elements in the list that come after the specified cursor."
    after: String
  ): HealthCheckCursorConnection
  healthCheck(id: ID!): HealthCheck
}

"A node, according to the Relay specification."
interface Node {
  "The id of this node."
  id: ID!
}

"Cursor connection for ExampleApiResource."
type ExampleApiResourceCursorConnection {
  edges: [ExampleApiResourceEdge]
  pageInfo: ExampleApiResourcePageInfo!
  totalCount: Int!
}

"Edge of ExampleApiResource."
type ExampleApiResourceEdge {
  node: ExampleApiResource
  cursor: String!
}

type ExampleApiResource implements Node {
  id: ID!
}

"Information about the current page."
type ExampleApiResourcePageInfo {
  endCursor: String
  startCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

"Cursor connection for HealthCheck."
type HealthCheckCursorConnection {
  edges: [HealthCheckEdge]
  pageInfo: HealthCheckPageInfo!
  totalCount: Int!
}

"Edge of HealthCheck."
type HealthCheckEdge {
  node: HealthCheck
  cursor: String!
}

type HealthCheck implements Node {
  id: ID!
}

"Information about the current page."
type HealthCheckPageInfo {
  endCursor: String
  startCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Mutation {
  "Updates a ExampleApiResource."
  updateExampleApiResource(input: updateExampleApiResourceInput!): updateExampleApiResourcePayload

  "Deletes a ExampleApiResource."
  deleteExampleApiResource(input: deleteExampleApiResourceInput!): deleteExampleApiResourcePayload

  "Creates a ExampleApiResource."
  createExampleApiResource(input: createExampleApiResourceInput!): createExampleApiResourcePayload

  "Updates a HealthCheck."
  updateHealthCheck(input: updateHealthCheckInput!): updateHealthCheckPayload

  "Deletes a HealthCheck."
  deleteHealthCheck(input: deleteHealthCheckInput!): deleteHealthCheckPayload

  "Creates a HealthCheck."
  createHealthCheck(input: createHealthCheckInput!): createHealthCheckPayload
}

"Updates a ExampleApiResource."
input updateExampleApiResourceInput {
  id: ID!
  clientMutationId: String
}

"Updates a ExampleApiResource."
type updateExampleApiResourcePayload {
  exampleApiResource: ExampleApiResource
  clientMutationId: String
}

"Deletes a ExampleApiResource."
input deleteExampleApiResourceInput {
  id: ID!
  clientMutationId: String
}

"Deletes a ExampleApiResource."
type deleteExampleApiResourcePayload {
  exampleApiResource: ExampleApiResource
  clientMutationId: String
}

"Creates a ExampleApiResource."
input createExampleApiResourceInput {
  clientMutationId: String
}

"Creates a ExampleApiResource."
type createExampleApiResourcePayload {
  exampleApiResource: ExampleApiResource
  clientMutationId: String
}

"Updates a HealthCheck."
input updateHealthCheckInput {
  id: ID!
  clientMutationId: String
}

"Updates a HealthCheck."
type updateHealthCheckPayload {
  healthCheck: HealthCheck
  clientMutationId: String
}

"Deletes a HealthCheck."
input deleteHealthCheckInput {
  id: ID!
  clientMutationId: String
}

"Deletes a HealthCheck."
type deleteHealthCheckPayload {
  healthCheck: HealthCheck
  clientMutationId: String
}

"Creates a HealthCheck."
input createHealthCheckInput {
  clientMutationId: String
}

"Creates a HealthCheck."
type createHealthCheckPayload {
  healthCheck: HealthCheck
  clientMutationId: String
}
