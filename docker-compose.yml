services:
  php:
    build:
      context: .
      target: frankenphp_prod
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:-^${SERVER_NAME:-example\.com|localhost}|php$$}
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  workers:
    depends_on:
      php:
        condition: service_healthy
    build:
      context: .
      target: frankenphp_prod
    privileged: true
    environment:
      - container=docker
    volumes:
      - ./:/srv/app

  database:
    image: mariadb:${DB_VERSION}
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      hostname: database
    ports:
      - '${DB_PORT}:3306'
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      interval: 10s
      retries: 10
      test: ['CMD', 'healthcheck.sh', '--su-mysql', '--connect', '--innodb_initialized']

  redis:
    image: redis:7.2.5-alpine
    ports:
      - '${REDIS_PORT}:6379'

volumes:
  caddy_data:
  caddy_config:
  db_data: