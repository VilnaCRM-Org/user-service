resources:
#  App\User\Domain\Entity\User\User:
#    operations:
#      get:
#        class: ApiPlatform\Metadata\Get
#      get_collection:
#        class: ApiPlatform\Metadata\GetCollection
#        paginationClientItemsPerPage: true
#      put:
#        class: ApiPlatform\Metadata\Put
#      patch:
#        class: ApiPlatform\Metadata\Patch
#      post:
#        class: ApiPlatform\Metadata\Post
#      delete:
#        class: ApiPlatform\Metadata\Delete
#      retry:
#        class: ApiPlatform\Metadata\Post
#        uriTemplate: /users/{id}/resend-confirmation-email
#      confirm:
#        class: ApiPlatform\Metadata\Patch
#        uriTemplate: users/confirm
  App\User\Domain\Entity\OAuth\OAuth:
    operations:
      authorize:
        class: ApiPlatform\Metadata\Get
        uriTemplate: /oauth/authorize
        controller: league.oauth2_server.controller.authorization::indexAction
        openapiContext:
          summary: 'Requests for authorization code'
          description: 'Requests for authorization code'
          parameters:
            - name: 'response_type'
              type: 'string'
              in: 'query'
              required: true
              example: 'code'
            - name: 'client_id'
              type: 'string'
              in: 'query'
              required: true
              example: 'dc0bc6323f16fecd4224a3860ca894c5'
            - name: 'redirect_uri'
              type: 'string'
              in: 'query'
              required: true
              example: 'https://example.com/oauth/callback'
            - name: 'scope'
              type: 'string'
              in: 'query'
              required: false
              example: 'EMAIL PROFILE'
          responses:
            302:
              description: 'Redirect to the provided redirect URI with authorization code.'
              headers:
                Location:
                  description: 'The URI to redirect to for user authorization'
                  schema:
                    type: string
                    format: uri
                    example: "https://example.com/oauth/callback?code=e7f8c62113a47f7a5a9dca1f"
              content:
                application/json:
                  example: '{}'
            400:
              description: 'Unsupported grant type'
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error: { type: string }
                      error_description: { type: integer }
                      hint: { type: string }
                      message: { type: string }
                  example:
                    error: "unsupported_grant_type"
                    error_description: "The authorization grant type is not supported by the authorization server."
                    hint: "Check that all required parameters have been provided"
                    message: "The authorization grant type is not supported by the authorization server."
            401:
              description: 'Invalid client credentials'
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error: { type: string }
                      error_description: { type: integer }
                      message: { type: string }
                  example:
                    error: "invalid_client"
                    error_description: "Client authentication failed"
                    message: "Client authentication failed"


      token:
        class: ApiPlatform\Metadata\Post
        uriTemplate: /oauth/token
        controller: league.oauth2_server.controller.token::indexAction
        openapiContext:
          summary: 'Requests for access token'
          description: 'Requests for access token'
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    grant_type: { type: string }
                    client_id: { type: string }
                    client_secret: { type: string }
                    redirect_uri: { type: string }
                    code: { type: string }
                example:
                  grant_type: 'authorization_code'
                  client_id: 'dc0bc6323f16fecd4224a3860ca894c5'
                  client_secret: '8897b24436ac63e457fbd7d0bd5b678686c0cb214ef92fa9e8464fc777ec51a79507182836799d166776094c5b8bccc00e4d4cbb9a136a5d244349c6eee67b8c'
                  redirect_uri: 'https://example.com/oauth/callback'
                  code: 'e7f8c62113a47f7a5a9dca1f'
          responses:
            200:
              description: 'Access token returned'
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      token_type: { type: string }
                      expires_in: { type: integer }
                      access_token: { type: string }
                      refresh_token: { type: string }
                  example:
                    token_type: 'Bearer'
                    expires_in: 3600
                    access_token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJkYzBiYzYzMjNmMTZmZWNkNDIyNGEzODYwY2E4OTRjNSIsImp0aSI6IjY5MGZhODFmYWE0YjdlNmExZDZjNThjMzI5N2IzYjViYjAwMGVlMGExMTlmMGQ5YzNjZjkxMTIzY2JlMGRlZTI4MjcxMDYxYTNmYzU1NDM4IiwiaWF0IjoxNzAwNzUxOTU0LjgzMDE5OSwibmJmIjoxNzAwNzUxOTU0LjgzMDIxOCwiZXhwIjoxNzAwNzU1NTU0Ljc5NDg1NSwic3ViIjoiIiwic2NvcGVzIjpbIkVNQUlMIl19.cDUpuOfe4Bazx-N241qYDW0rktSJfeVtnZckDMFt_dxy7pHByupef5JkC1GOZWt8GkW-Uc1d5vaGjopMowjFuQEWS-OowCjj5WHrS528UwwKFHevrLpAAR-GDfMpOu97mMd4XMhXNKIcp0rGutoWeh4aHM90p815q3YTiFtTidGksYqhLZgUzusyG_iLNzLDTbCME-9UMgk8rtjuvHrldRAMnbCloBURbyOM2x7ObFpnjosobX2D5upMbsGAXenswiZM8CUVVbUPPW358Q3ygGWiA1lN4w0WFSjba7NZdZ3fh5Ht--fcQHCae_ZNQp-SwSy5xe2vRKIRaxilWr-x7g'
                    refresh_token: 'df9b4ae7ce2e1e8f2a3c1b4d'
            400:
              description: 'Unsupported grant type'
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error: { type: string }
                      error_description: { type: integer }
                      hint: { type: string }
                      message: { type: string }
                  example:
                    error: "unsupported_grant_type"
                    error_description: "The authorization grant type is not supported by the authorization server."
                    hint: "Check that all required parameters have been provided"
                    message: "The authorization grant type is not supported by the authorization server."
            401:
              description: 'Invalid client credentials'
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error: { type: string }
                      error_description: { type: integer }
                      message: { type: string }
                  example:
                    error: "invalid_client"
                    error_description: "Client authentication failed"
                    message: "Client authentication failed"
