# Production environment override
services:
  php:
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - ./infrastructure/docker/php/conf.d/app.prod.ini:/usr/local/etc/php/conf.d/app.prod.ini:ro
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME}/.well-known/mercure
      DB_URL: postgresql://${DB_USER}:${DB_PASSWORD}@database:${DB_PORT}/${DB_NAME}?serverVersion=${DB_VERSION}

  caddy:
    build:
      context: .
      target: app_caddy
    depends_on:
      php:
        condition: service_healthy
    environment:
      SERVER_NAME: ${SERVER_NAME}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  database:
    image: postgres:${DB_VERSION}-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      interval: 10s
      retries: 10
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-app}"]

  localstack:
    image: localstack/localstack:3.4.0
    container_name: localstack
    ports:
      - "${LOCALSTACK_PORT}:4566"
    environment:
      - SERVICES=sqs
      - DEBUG=0
    volumes:
      - localstack_data:/var/lib/localstack
      - ./infrastructure/docker/php/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh

volumes:
  php_socket:
  caddy_data:
  caddy_config:
  db_data:
  localstack_data: